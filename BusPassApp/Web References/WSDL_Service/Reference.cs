//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace BusPassApp.WSDL_Service {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BusPassAppSoap", Namespace="http://tempuri.org/")]
    public partial class BusPassApp : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_User_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_Fetch_OTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InertFetchBookingDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManagePGTrackOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManagePassDetailsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BusPassApp() {
            this.Url = global::BusPassApp.Properties.Settings.Default.BusPassApp_WSDL_Service_BusPassApp;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertRegistrationCompletedEventHandler InsertRegistrationCompleted;
        
        /// <remarks/>
        public event Fetch_User_DetailsCompletedEventHandler Fetch_User_DetailsCompleted;
        
        /// <remarks/>
        public event SendOTPCompletedEventHandler SendOTPCompleted;
        
        /// <remarks/>
        public event Insert_Fetch_OTPCompletedEventHandler Insert_Fetch_OTPCompleted;
        
        /// <remarks/>
        public event SendMailCompletedEventHandler SendMailCompleted;
        
        /// <remarks/>
        public event InertFetchBookingDetailsCompletedEventHandler InertFetchBookingDetailsCompleted;
        
        /// <remarks/>
        public event ManagePGTrackCompletedEventHandler ManagePGTrackCompleted;
        
        /// <remarks/>
        public event ManagePassDetailsCompletedEventHandler ManagePassDetailsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertRegistration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InsertRegistration(string strRequest, ref string strErrorMsg) {
            object[] results = this.Invoke("InsertRegistration", new object[] {
                        strRequest,
                        strErrorMsg});
            strErrorMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InsertRegistrationAsync(string strRequest, string strErrorMsg) {
            this.InsertRegistrationAsync(strRequest, strErrorMsg, null);
        }
        
        /// <remarks/>
        public void InsertRegistrationAsync(string strRequest, string strErrorMsg, object userState) {
            if ((this.InsertRegistrationOperationCompleted == null)) {
                this.InsertRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRegistrationOperationCompleted);
            }
            this.InvokeAsync("InsertRegistration", new object[] {
                        strRequest,
                        strErrorMsg}, this.InsertRegistrationOperationCompleted, userState);
        }
        
        private void OnInsertRegistrationOperationCompleted(object arg) {
            if ((this.InsertRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertRegistrationCompleted(this, new InsertRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_User_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_User_Details(string strRegisteredNo, string strMobileNo, string strMailID, string strPassword, string Flag) {
            object[] results = this.Invoke("Fetch_User_Details", new object[] {
                        strRegisteredNo,
                        strMobileNo,
                        strMailID,
                        strPassword,
                        Flag});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_User_DetailsAsync(string strRegisteredNo, string strMobileNo, string strMailID, string strPassword, string Flag) {
            this.Fetch_User_DetailsAsync(strRegisteredNo, strMobileNo, strMailID, strPassword, Flag, null);
        }
        
        /// <remarks/>
        public void Fetch_User_DetailsAsync(string strRegisteredNo, string strMobileNo, string strMailID, string strPassword, string Flag, object userState) {
            if ((this.Fetch_User_DetailsOperationCompleted == null)) {
                this.Fetch_User_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_User_DetailsOperationCompleted);
            }
            this.InvokeAsync("Fetch_User_Details", new object[] {
                        strRegisteredNo,
                        strMobileNo,
                        strMailID,
                        strPassword,
                        Flag}, this.Fetch_User_DetailsOperationCompleted, userState);
        }
        
        private void OnFetch_User_DetailsOperationCompleted(object arg) {
            if ((this.Fetch_User_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_User_DetailsCompleted(this, new Fetch_User_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendOTP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendOTP(string strMobileNo, string SMSContent) {
            object[] results = this.Invoke("SendOTP", new object[] {
                        strMobileNo,
                        SMSContent});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendOTPAsync(string strMobileNo, string SMSContent) {
            this.SendOTPAsync(strMobileNo, SMSContent, null);
        }
        
        /// <remarks/>
        public void SendOTPAsync(string strMobileNo, string SMSContent, object userState) {
            if ((this.SendOTPOperationCompleted == null)) {
                this.SendOTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOTPOperationCompleted);
            }
            this.InvokeAsync("SendOTP", new object[] {
                        strMobileNo,
                        SMSContent}, this.SendOTPOperationCompleted, userState);
        }
        
        private void OnSendOTPOperationCompleted(object arg) {
            if ((this.SendOTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOTPCompleted(this, new SendOTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_Fetch_OTP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Insert_Fetch_OTP(string strRegisteredNo, string strMobileNo, string strMailID, string strMobileOTP, string strMailOTP, string strDate, string Flag) {
            object[] results = this.Invoke("Insert_Fetch_OTP", new object[] {
                        strRegisteredNo,
                        strMobileNo,
                        strMailID,
                        strMobileOTP,
                        strMailOTP,
                        strDate,
                        Flag});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_Fetch_OTPAsync(string strRegisteredNo, string strMobileNo, string strMailID, string strMobileOTP, string strMailOTP, string strDate, string Flag) {
            this.Insert_Fetch_OTPAsync(strRegisteredNo, strMobileNo, strMailID, strMobileOTP, strMailOTP, strDate, Flag, null);
        }
        
        /// <remarks/>
        public void Insert_Fetch_OTPAsync(string strRegisteredNo, string strMobileNo, string strMailID, string strMobileOTP, string strMailOTP, string strDate, string Flag, object userState) {
            if ((this.Insert_Fetch_OTPOperationCompleted == null)) {
                this.Insert_Fetch_OTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_Fetch_OTPOperationCompleted);
            }
            this.InvokeAsync("Insert_Fetch_OTP", new object[] {
                        strRegisteredNo,
                        strMobileNo,
                        strMailID,
                        strMobileOTP,
                        strMailOTP,
                        strDate,
                        Flag}, this.Insert_Fetch_OTPOperationCompleted, userState);
        }
        
        private void OnInsert_Fetch_OTPOperationCompleted(object arg) {
            if ((this.Insert_Fetch_OTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_Fetch_OTPCompleted(this, new Insert_Fetch_OTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendMail(string strToMaiID, string strSubject, string strContent) {
            object[] results = this.Invoke("SendMail", new object[] {
                        strToMaiID,
                        strSubject,
                        strContent});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendMailAsync(string strToMaiID, string strSubject, string strContent) {
            this.SendMailAsync(strToMaiID, strSubject, strContent, null);
        }
        
        /// <remarks/>
        public void SendMailAsync(string strToMaiID, string strSubject, string strContent, object userState) {
            if ((this.SendMailOperationCompleted == null)) {
                this.SendMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailOperationCompleted);
            }
            this.InvokeAsync("SendMail", new object[] {
                        strToMaiID,
                        strSubject,
                        strContent}, this.SendMailOperationCompleted, userState);
        }
        
        private void OnSendMailOperationCompleted(object arg) {
            if ((this.SendMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailCompleted(this, new SendMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InertFetchBookingDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InertFetchBookingDetails(string strobj, ref string strErrorMsg) {
            object[] results = this.Invoke("InertFetchBookingDetails", new object[] {
                        strobj,
                        strErrorMsg});
            strErrorMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InertFetchBookingDetailsAsync(string strobj, string strErrorMsg) {
            this.InertFetchBookingDetailsAsync(strobj, strErrorMsg, null);
        }
        
        /// <remarks/>
        public void InertFetchBookingDetailsAsync(string strobj, string strErrorMsg, object userState) {
            if ((this.InertFetchBookingDetailsOperationCompleted == null)) {
                this.InertFetchBookingDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInertFetchBookingDetailsOperationCompleted);
            }
            this.InvokeAsync("InertFetchBookingDetails", new object[] {
                        strobj,
                        strErrorMsg}, this.InertFetchBookingDetailsOperationCompleted, userState);
        }
        
        private void OnInertFetchBookingDetailsOperationCompleted(object arg) {
            if ((this.InertFetchBookingDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InertFetchBookingDetailsCompleted(this, new InertFetchBookingDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ManagePGTrack", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ManagePGTrack(string strobj, ref string strErrorMsg) {
            object[] results = this.Invoke("ManagePGTrack", new object[] {
                        strobj,
                        strErrorMsg});
            strErrorMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ManagePGTrackAsync(string strobj, string strErrorMsg) {
            this.ManagePGTrackAsync(strobj, strErrorMsg, null);
        }
        
        /// <remarks/>
        public void ManagePGTrackAsync(string strobj, string strErrorMsg, object userState) {
            if ((this.ManagePGTrackOperationCompleted == null)) {
                this.ManagePGTrackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManagePGTrackOperationCompleted);
            }
            this.InvokeAsync("ManagePGTrack", new object[] {
                        strobj,
                        strErrorMsg}, this.ManagePGTrackOperationCompleted, userState);
        }
        
        private void OnManagePGTrackOperationCompleted(object arg) {
            if ((this.ManagePGTrackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManagePGTrackCompleted(this, new ManagePGTrackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ManagePassDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ManagePassDetails(string strPassID, string strFlag, ref string strErrorMsg) {
            object[] results = this.Invoke("ManagePassDetails", new object[] {
                        strPassID,
                        strFlag,
                        strErrorMsg});
            strErrorMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ManagePassDetailsAsync(string strPassID, string strFlag, string strErrorMsg) {
            this.ManagePassDetailsAsync(strPassID, strFlag, strErrorMsg, null);
        }
        
        /// <remarks/>
        public void ManagePassDetailsAsync(string strPassID, string strFlag, string strErrorMsg, object userState) {
            if ((this.ManagePassDetailsOperationCompleted == null)) {
                this.ManagePassDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManagePassDetailsOperationCompleted);
            }
            this.InvokeAsync("ManagePassDetails", new object[] {
                        strPassID,
                        strFlag,
                        strErrorMsg}, this.ManagePassDetailsOperationCompleted, userState);
        }
        
        private void OnManagePassDetailsOperationCompleted(object arg) {
            if ((this.ManagePassDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManagePassDetailsCompleted(this, new ManagePassDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertRegistrationCompletedEventHandler(object sender, InsertRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErrorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_User_DetailsCompletedEventHandler(object sender, Fetch_User_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_User_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_User_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendOTPCompletedEventHandler(object sender, SendOTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendOTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendOTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Insert_Fetch_OTPCompletedEventHandler(object sender, Insert_Fetch_OTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_Fetch_OTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_Fetch_OTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendMailCompletedEventHandler(object sender, SendMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InertFetchBookingDetailsCompletedEventHandler(object sender, InertFetchBookingDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InertFetchBookingDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InertFetchBookingDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErrorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ManagePGTrackCompletedEventHandler(object sender, ManagePGTrackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ManagePGTrackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ManagePGTrackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErrorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ManagePassDetailsCompletedEventHandler(object sender, ManagePassDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ManagePassDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ManagePassDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErrorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591